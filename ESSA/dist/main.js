import{g as e}from"./_commonjsHelpers.js";var s={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ESSA=void 0,e.ESSA={saNodes:[],threshold:.1,setThreshold:function(e){if("string"==typeof e){if(""===(e=e.trim()))return console.warn("threshold value is empty, using default value 0.1"),.1;if(!isFinite(Number(e)))return console.warn(`invalid threshold value "${e}", using default value 0.1`),.1;e=Number(e)}return"number"!=typeof e?(console.warn(`invalid threshold value "${e}", using default value 0.1`),.1):(e>1&&(console.warn(`threshold value "${e}" cannot be greater than 1, using maximum value 1`),e=1),e)},intersection:function(){if(e.ESSA.saNodes&&e.ESSA.saNodes.length)for(const t of e.ESSA.saNodes)s.observe(t)},init:function(s){void 0!==s&&(e.ESSA.threshold=e.ESSA.setThreshold(s)),e.ESSA.intersection()}};const s=new IntersectionObserver((e=>{e.forEach((e=>{const t=e.target;if(!(t instanceof HTMLDivElement))return!1;"false"===t.dataset.saOnce?e.isIntersecting?t.classList.add("saShow"):!e.isIntersecting&&t.classList.contains("saShow")&&t.classList.remove("saShow"):e.isIntersecting&&(t.classList.add("saShow"),s.unobserve(t))}))}),{threshold:e.ESSA.threshold})}(s);var t=e(s);export{t as default};
