!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";var e={saNodes:[],threshold:.1,setThreshold:function(n){"string"==typeof n&&(""===(n=n.trim())&&(console.warn("threshold value is empty, using default value 0.1"),n=.1),isFinite(Number(n))||(console.warn('invalid threshold value "'.concat(n,'", using default value 0.1')),n=.1),n=Number(n)),"number"!=typeof n&&(console.warn('invalid threshold value "'.concat(n,'", using default value 0.1')),n=.1),n>1?(console.warn('threshold value "'.concat(n,'" cannot be greater than 1, using maximum value 1')),n=1):n<0&&(console.warn('threshold value "'.concat(n,'" cannot be less than 0, using minimum value 0')),n=0),e.threshold=n},intersection:function(){if(e.saNodes&&e.saNodes.length)for(var s=0,t=e.saNodes;s<t.length;s++){var o=t[s];n.observe(o)}},init:function(n){var s=document.querySelectorAll("[data-sa]");if(!s||0===s.length)throw new Error("No matching elements found");e.saNodes=s,void 0!==n&&e.setThreshold(n),e.intersection()}},n=new IntersectionObserver((function(e){e.forEach((function(e){var s=e.target;if(!(s instanceof HTMLDivElement))return!1;"true"!==s.dataset.saOnce?e.isIntersecting?s.classList.add("saShow"):!e.isIntersecting&&s.classList.contains("saShow")&&s.classList.remove("saShow"):e.isIntersecting&&(s.classList.add("saShow"),n.unobserve(s))}))}),{threshold:e.threshold});window.sa=e}));
